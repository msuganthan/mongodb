msuganthan@msuganthan-TECRA-C50-C:~$ mongo
MongoDB shell version: 2.6.10
connecting to: test
test 1 > edit susyssmith
test 2 > susyssmith = {"name" : "suganthan"}
{ "name" : "suganthan" }
test 3 > edit susyssmith
test 4 > susyssmith
{ "name" : "suganthan" }
test 5 > edit susyssmith
test 6 > susyssmith
{ "name" : "suganthan" }
test 7 > use test
switched to db test
test 8 > db.test.find()
{ "_id" : ObjectId("57d20384dd993b5d5227481d"), "name" : "Suganthan", "position" : "Programmer", "email" : "sugu@gmail.com", "hiredate" : ISODate("2016-09-09T00:20:50.029Z"), "references" : [ ], "grades" : [ "a", "b", "c", 123 ], "number" : 1, "boolean" : true, "null" : null, "addressRegex" : /^[A-Z]{5,10}$/, "embedded" : { "name" : "Madhavan" } }
test 9 > db.test.find().pretty
function (){
    this._prettyShell = true;
    return this;
}
test 10 > db.test.find().pretty()
{
	"_id" : ObjectId("57d20384dd993b5d5227481d"),
	"name" : "Suganthan",
	"position" : "Programmer",
	"email" : "sugu@gmail.com",
	"hiredate" : ISODate("2016-09-09T00:20:50.029Z"),
	"references" : [ ],
	"grades" : [
		"a",
		"b",
		"c",
		123
	],
	"number" : 1,
	"boolean" : true,
	"null" : null,
	"addressRegex" : /^[A-Z]{5,10}$/,
	"embedded" : {
		"name" : "Madhavan"
	}
}
test 11 > db.test.dropIndex()
assert failed : need to specify index to dropIndex
Error: assert failed : need to specify index to dropIndex
    at Error (<anonymous>)
    at doassert (src/mongo/shell/assert.js:11:14)
    at assert (src/mongo/shell/assert.js:20:5)
    at DBCollection.dropIndex (src/mongo/shell/collection.js:1015:5)
    at (shell):1:9
2016-09-09T07:45:28.885+0530 Error: assert failed : need to specify index to dropIndex at src/mongo/shell/assert.js:13
test 12 > db.drop
db.dropAllRoles(  db.dropDatabase(  db.dropUser(
db.dropAllUsers(  db.dropRole(
test 12 > db.test.drop()
true
test 13 > db.test.find().pretty()
test 14 > db.test.insert([{"name": "Gokil"}, {"name": "Gautam"}])
BulkWriteResult({
	"writeErrors" : [ ],
	"writeConcernErrors" : [ ],
	"nInserted" : 2,
	"nUpserted" : 0,
	"nMatched" : 0,
	"nModified" : 0,
	"nRemoved" : 0,
	"upserted" : [ ]
})
test 15 > db.test.find().pretty()
{ "_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"), "name" : "Gokil" }
{ "_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"), "name" : "Gautam" }
test 16 > db.test.update({"name": "Gokil"},)
2016-09-09T07:50:59.343+0530 SyntaxError: Unexpected token )
test 17 > db.test.update({"name": "Gokil"},
... {$set: {"name": "Gokul", "Home": "Bangalore"}}}
2016-09-09T07:51:30.945+0530 SyntaxError: Unexpected token }
test 18 > db.test.update({"name": "Gokil"}, {$set: {"name": "Gokul", "Home": "Bangalore"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
test 19 > db.test.find().pretty()
{ "_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"), "name" : "Gautam" }
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
test 20 > db.test.insert([{"name": "Babe Ruth", "Hall of Fame": "Inductee"},{"name": "Tysone", "Hall of Fame": "Inductee"}, {"name": "Cena", "Hall of Fame": "Inductee"}, {"name": "Jack", "Hall of Fame": "Inductee"}, {"name": "Rajini", "Hall of Fame": "Inductee"},]
... )
BulkWriteResult({
	"writeErrors" : [ ],
	"writeConcernErrors" : [ ],
	"nInserted" : 5,
	"nUpserted" : 0,
	"nMatched" : 0,
	"nModified" : 0,
	"nRemoved" : 0,
	"upserted" : [ ]
})
test 21 > db.test.find().pretty()
{ "_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"), "name" : "Gautam" }
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee"
}
test 22 > db.test.update({"Hall of fame": "Inductee"}, {$set: {"Hall of fame": "Inducted in 1936"}}, {multi:true})
WriteResult({ "nMatched" : 0, "nUpserted" : 0, "nModified" : 0 })
test 23 > db.test.update({"Hall of Fame": "Inductee"}, {$set: {"Hall of fame": "Inducted in 1936"}}, {multi:true})
WriteResult({ "nMatched" : 5, "nUpserted" : 0, "nModified" : 5 })
test 24 > db.test.find().pretty()
{ "_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"), "name" : "Gautam" }
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936"
}
test 25 > db.test.update({$set: {"Hall of fame": "Inducted in 1936"}}, {multi:tr[1]+  Stopped                 mongo
msuganthan@msuganthan-TECRA-C50-C:~$ mongo
MongoDB shell version: 2.6.10
connecting to: test
test 1 > db.test.update({}, {$set: {"Home Runs": "755"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
test 2 > db.test.find()
{ "_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"), "name" : "Gokul", "Home" : "Bangalore" }
{ "_id" : ObjectId("57d21d78d5bb6e09e03e7f52"), "name" : "Babe Ruth", "Hall of Fame" : "Inductee", "Hall of fame" : "Inducted in 1936" }
{ "_id" : ObjectId("57d21d78d5bb6e09e03e7f53"), "name" : "Tysone", "Hall of Fame" : "Inductee", "Hall of fame" : "Inducted in 1936" }
{ "_id" : ObjectId("57d21d78d5bb6e09e03e7f54"), "name" : "Cena", "Hall of Fame" : "Inductee", "Hall of fame" : "Inducted in 1936" }
{ "_id" : ObjectId("57d21d78d5bb6e09e03e7f55"), "name" : "Jack", "Hall of Fame" : "Inductee", "Hall of fame" : "Inducted in 1936" }
{ "_id" : ObjectId("57d21d78d5bb6e09e03e7f56"), "name" : "Rajini", "Hall of Fame" : "Inductee", "Hall of fame" : "Inducted in 1936" }
{ "_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"), "name" : "Gautam", "Home Runs" : "755" }
test 3 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
test 4 > db.test.update({"Hall of Fame" : "Inductee"}, {$set: {"Home Runs": "755"}}, {multi: true})
WriteResult({ "nMatched" : 5, "nUpserted" : 0, "nModified" : 5 })
test 5 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : "755"
}
test 6 > db.test.update({"Hall of Fame" : "Inductee"}, {$inc: {"Home Runs": 1}}, {multi: true})
WriteResult({
	"nMatched" : 0,
	"nUpserted" : 0,
	"nModified" : 0,
	"writeError" : {
		"code" : 16837,
		"errmsg" : "Cannot apply $inc to a value of non-numeric type. {_id: ObjectId('57d21d78d5bb6e09e03e7f52')} has the field 'Home Runs' of non-numeric type String"
	}
})
test 7 > db.test.update({"Hall of Fame" : "Inductee"}, {$inc: {"Home Runs": 1}}, {multi: true})
WriteResult({
	"nMatched" : 0,
	"nUpserted" : 0,
	"nModified" : 0,
	"writeError" : {
		"code" : 16837,
		"errmsg" : "Cannot apply $inc to a value of non-numeric type. {_id: ObjectId('57d21d78d5bb6e09e03e7f52')} has the field 'Home Runs' of non-numeric type String"
	}
})
test 8 > db.test.update({"Hall of Fame" : "Inductee"}, {$inc: {"Home Runs": 1}})

WriteResult({
	"nMatched" : 0,
	"nUpserted" : 0,
	"nModified" : 0,
	"writeError" : {
		"code" : 16837,
		"errmsg" : "Cannot apply $inc to a value of non-numeric type. {_id: ObjectId('57d21d78d5bb6e09e03e7f52')} has the field 'Home Runs' of non-numeric type String"
	}
})
test 9 > db.test.update({"Hall of Fame" : "Inductee"}, {$set: {"Home Runs": 755}}, {multi: true})
WriteResult({ "nMatched" : 5, "nUpserted" : 0, "nModified" : 5 })
test 10 > db.test.update({"Hall of Fame" : "Inductee"}, {$inc: {"Home Runs": 1}}, {multi: true})
WriteResult({ "nMatched" : 5, "nUpserted" : 0, "nModified" : 5 })
test 11 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 756
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 756
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 756
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 756
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 756
}
test 12 > db.test.update({"Hall of Fame" : "Inductee"}, {$inc: {"Home Runs": -1}}, {multi: true})
WriteResult({ "nMatched" : 5, "nUpserted" : 0, "nModified" : 5 })
test 13 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 755
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 755
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 755
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 755
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 755
}
test 14 > db.test.update({"Hall of Fame" : "Inductee"}, {$inc: {"Home Runs": -1}}, {multi: true})
WriteResult({ "nMatched" : 5, "nUpserted" : 0, "nModified" : 5 })
test 15 > db.test.update({"Hall of Fame" : "Inductee"}, {$inc: {"Home Runs": -1}}, {multi: true})
WriteResult({ "nMatched" : 5, "nUpserted" : 0, "nModified" : 5 })
test 16 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 753
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 753
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 753
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 753
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 753
}
test 17 > db.test.update({"Hall of Fame" : "Inductee"}, {$mul: {"Home Runs": 1.04}}, {multi: true})
WriteResult({ "nMatched" : 5, "nUpserted" : 0, "nModified" : 5 })
test 18 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
test 19 > db.testdb.update({"name": "Rajini"}, 
... {$push: {"Record": }}
... {"Single Season HRS": 73,}
... )
2016-09-09T08:38:31.906+0530 SyntaxError: Unexpected token }
test 20 > db.testdb.update({"name": "Rajini"}, {$push: {"Record": {"Single Season HRS": 73, "HRs Careers" : 762, "Walks": 232} }}  )
WriteResult({ "nMatched" : 0, "nUpserted" : 0, "nModified" : 0 })
test 21 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
test 22 > db.testdb.update({"name": "Rajini"}, {"$push": {"Record": {"Single Season HRS": 73, "HRs Careers" : 762, "Walks": 232} }}  
... )
WriteResult({ "nMatched" : 0, "nUpserted" : 0, "nModified" : 0 })
test 23 > db.test.update({"name": "Rajini"}, {"$push": {"Record": {"Single Season HRS": 73, "HRs Careers" : 762, "Walks": 232} }} )
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
test 24 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	]
}
test 25 > db.test.update({"name": "Jack"}, {"$push": {"Record": {"Single Season HRS": 73, "HRs Careers" : 762, "Walks": 232} }} )
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
test 26 > db.test.update({"name": "Cena"}, {"$push": {"Record": {"Single Season HRS": 73, "HRs Careers" : 762, "Walks": 232} }} )
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
test 27 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	]
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	]
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	]
}
test 28 > db.test.update({"name": "Cena"}, {"Best Home Run Years": { $each: [45,45,46,46,47,48], "$slice": -5 } })
2016-09-09T08:47:08.033+0530 field names cannot start with $ [$each] at src/mongo/shell/collection.js:159
test 29 > db.test.update({"name": "Cena"}, {"Best Home Run Years": { "$each": [45,45,46,46,47,48], "$slice": -5 } })
2016-09-09T08:47:29.367+0530 field names cannot start with $ [$each] at src/mongo/shell/collection.js:159
test 30 > db.test.update({"name": "Cena"},{$push: {"Best Home Run Years": { "$each": [45,45,46,46,47,48], "$slice": -5 } }})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
test 31 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	]
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	]
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	],
	"Best Home Run Years" : [
		45,
		46,
		46,
		47,
		48
	]
}
test 32 > db.test.update({"name": "Rajini"},{$addToSet: {"Best Home Run Years": 47}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
test 33 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	]
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	],
	"Best Home Run Years" : [
		45,
		46,
		46,
		47,
		48
	]
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	],
	"Best Home Run Years" : [
		47
	]
}
test 34 > db.test.update({"name": "Rajini"},{$addToSet: {"Best Home Run Years": 47}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
test 35 > db.test.update({"name": "Rajini"},{$addToSet: {"Best Home Run Years": 47}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
test 36 > db.test.update({"name": "Rajini"},{$pop: {"Best Home Run Years": 1}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
test 37 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	]
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	],
	"Best Home Run Years" : [
		45,
		46,
		46,
		47,
		48
	]
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	],
	"Best Home Run Years" : [ ]
}
test 38 > db.test.update({"name": "Rajini"},{$pop: {"Best Home Run Years": 1}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
test 39 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	]
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	],
	"Best Home Run Years" : [
		45,
		46,
		46,
		47,
		48
	]
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	],
	"Best Home Run Years" : [ ]
}
test 40 > db.test.update({"name": "Rajini"},{$pop: {"Best Home Run Years": 1}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
test 41 > db.test.update({"name": "Rajini"},{$pop: {"Best Home Run Years": 2}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
test 42 > db.test.update({"name": "Rajini"},{$pop: {"Best Home Run Years": -1}})

WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
test 43 > db.test.find().pretty()
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f50"),
	"name" : "Gokul",
	"Home" : "Bangalore"
}
{
	"_id" : ObjectId("57d21ba1d5bb6e09e03e7f51"),
	"name" : "Gautam",
	"Home Runs" : "755"
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f52"),
	"name" : "Babe Ruth",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f53"),
	"name" : "Tysone",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f55"),
	"name" : "Jack",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	]
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f54"),
	"name" : "Cena",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	],
	"Best Home Run Years" : [
		45,
		46,
		46,
		47,
		48
	]
}
{
	"_id" : ObjectId("57d21d78d5bb6e09e03e7f56"),
	"name" : "Rajini",
	"Hall of Fame" : "Inductee",
	"Hall of fame" : "Inducted in 1936",
	"Home Runs" : 783.12,
	"Record" : [
		{
			"Single Season HRS" : 73,
			"HRs Careers" : 762,
			"Walks" : 232
		}
	],
	"Best Home Run Years" : [ ]
}
test 44 > db.test.update({"name": "Rajini"},{$pop: {"Best Home Run Years": -1}})

WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
test 45 > db.test.update({"name": "Cena"},{$pop: {"Best Home Run Years": -1}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
test 46 > 

